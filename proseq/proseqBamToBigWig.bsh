#!/bin/bash

# To get chromInfo, run the command below.  NOTE: MUST REMOVE HEADER LINE.
chromInfo=$2 #/local/storage/data/hg19/hg19.chromInfo
scratch=$3   #/workdir

function makeBigWig {
 for f in $FILES
 do
   j=`echo $f | cut -d \. -f 1`
   echo $j

   bedtools bamtobed -i $f | awk 'BEGIN{OFS="\t"} ($5 > 0){print $0}' | \
        awk 'BEGIN{OFS="\t"} ($6 == "+") {print $1,$2,$2+1,$4,$5,$6}; ($6 == "-") {print $1,$3-1,$3,$4,$5,$6}' | gzip > $scratch/$j.bed.gz
   echo 'Number of mappable reads:'
   echo `zcat $scratch/$j.bed.gz | grep "" -c`

   ## Remove rRNA and reverse the strand (PRO-seq).
   zcat $scratch/$j.bed.gz | grep "rRNA" -v | grep "_" -v | \
         awk 'BEGIN{OFS="\t"} {print $1,$2,$3,$4,$5,$6=="+"?"-":"+"}' | gzip > $scratch/$j.nr.rs.bed.gz
   echo 'Number of mappable reads (excluding rRNA):'
   echo `zcat $scratch/$j.nr.rs.bed.gz | grep "" -c`

   ## Convert to bedGraph ... Can't gzip these, unfortunately.
   bedtools genomecov -bg -i $scratch/$j.nr.rs.bed.gz -g $chromInfo -strand + > $scratch/$j\_plus.bedGraph
   bedtools genomecov -bg -i $scratch/$j.nr.rs.bed.gz -g $chromInfo -strand - > $scratch/$j\_minus.noinv.bedGraph

   ## Invert minus strand.
   cat $scratch/$j\_minus.noinv.bedGraph | awk 'BEGIN{OFS="\t"} {print $1,$2,$3,-1*$4}' > $scratch/$j\_minus.bedGraph ## Invert read counts on the minus strand. 

   ## Then to bigWig
   bedGraphToBigWig $scratch/$j\_plus.bedGraph $chromInfo $j\_plus.bw
   bedGraphToBigWig $scratch/$j\_minus.bedGraph $chromInfo $j\_minus.bw
 
   rm $scratch/$j.nr.rs.bed.gz $scratch/$j.bed.gz $scratch/$j*.bedGraph
 done
}

# Convert to bigWig.
#FILES=`ls *.bed.gz`
FILES=$1
makeBigWig

